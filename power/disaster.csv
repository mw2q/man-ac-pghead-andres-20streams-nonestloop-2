Q3,313506.2,->  Sort  (cost=2667455.82..2675293.48 rows=3135062 width=20) (actual time=28133.752..28133.753 rows=10 loops=1)
Q18,303261.0,->  GroupAggregate  (cost=10153747.81..10979376.13 rows=30022848 width=39) (actual time=62493.424..62493.698 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2179053.27..2792462.20 rows=7507492 width=39) (actual time=38250.565..44502.545 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2110025.27..2610821.82 rows=7507492 width=20) (actual time=37297.754..43548.934 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2792462.20..2792462.20 rows=7507492 width=39) (actual time=44503.388..44503.388 rows=99 loops=1)
Q18,43323.0,->  Sort  (cost=10153747.81..10228804.93 rows=30022848 width=39) (actual time=62493.404..62493.448 rows=693 loops=1)
Q18,43323.0,->  Hash Join  (cost=2886305.85..5604037.52 rows=30022848 width=39) (actual time=44904.755..62491.700 rows=693 loops=1)
Q18,41230.8,->  Hash  (cost=2059002.12..2059002.12 rows=4081852 width=4) (actual time=37107.661..37107.661 rows=99 loops=1)
Q18,41230.8,->  HashAggregate  (cost=1967160.45..2018183.60 rows=4081852 width=8) (actual time=33300.086..37104.879 rows=99 loops=1)
Q21,39320.0,->  Merge Semi Join  (cost=1593897.65..5397241.00 rows=1 width=26) (actual time=28784.745..63757.699 rows=39320 loops=1)
Q9,30570.1,->  Sort  (cost=3358935.34..3358935.61 rows=107 width=46) (actual time=46216.694..46700.607 rows=3271001 loops=1)
Q9,30570.1,->  Hash Join  (cost=2898950.63..3358931.73 rows=107 width=46) (actual time=30725.766..41201.737 rows=3271001 loops=1)
Q9,30570.1,->  Hash Join  (cost=2898949.06..3358928.16 rows=107 width=24) (actual time=30725.636..39772.744 rows=3271001 loops=1)
Q9,30570.1,->  Hash Join  (cost=2067988.66..2898947.73 rows=107 width=24) (actual time=24628.666..29884.571 rows=3271001 loops=1)
Q9,30570.1,->  Hash  (cost=2898947.73..2898947.73 rows=107 width=24) (actual time=30725.602..30725.602 rows=3271001 loops=1)
Q10,28106.1,->  Sort  (cost=1149398.30..1150803.61 rows=562123 width=175) (actual time=19032.730..19032.732 rows=20 loops=1)
Q2,4745.0,->  Merge Join  (cost=465801.75..25255014.23 rows=1 width=190) (actual time=5344.771..193126.790 rows=4745 loops=1)
Q21,3991.0,->  HashAggregate  (cost=5397241.01..5397241.02 rows=1 width=26) (actual time=63805.219..63806.211 rows=3991 loops=1)
Q15,3768.0,->  Subquery Scan on revenue0  (cost=1188148.92..1188233.70 rows=3768 width=12) (actual time=11963.635..11974.276 rows=1 loops=1)
Q15,3768.0,->  Sort  (cost=1188457.51..1188466.93 rows=3768 width=12) (actual time=11974.323..11974.325 rows=1 loops=1)
Q15,3768.0,Merge Join  (cost=2359700.40..2364798.12 rows=3768 width=79) (actual time=11999.259..11999.263 rows=1 loops=1)
Q15,3768.0,->  HashAggregate  (cost=1188148.92..1188196.02 rows=3768 width=12) (actual time=11963.632..11974.272 rows=1 loops=1)
Q7,767.5,Sort  (cost=2369076.85..2369084.53 rows=3070 width=64) (actual time=28633.900..28633.901 rows=4 loops=1)
Q7,767.5,->  HashAggregate  (cost=2368852.99..2368899.04 rows=3070 width=64) (actual time=28633.807..28633.812 rows=4 loops=1)
Q8,365.0,Sort  (cost=2450099.61..2450101.43 rows=730 width=38) (actual time=24211.749..24211.749 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=2450052.11..2450064.89 rows=730 width=38) (actual time=24211.680..24211.682 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=5397241.03..5397241.03 rows=1 width=26) (actual time=63807.218..63807.223 rows=100 loops=1)
Q21,100.0,Limit  (cost=5397241.03..5397241.03 rows=1 width=26) (actual time=63807.221..63807.238 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25255014.24..25255014.24 rows=1 width=190) (actual time=193165.405..193165.417 rows=100 loops=1)
Q2,100.0,Limit  (cost=25255014.24..25255014.24 rows=1 width=190) (actual time=193165.409..193165.430 rows=100 loops=1)
Q11,32.6,Sort  (cost=616856.54..617656.37 rows=319933 width=12) (actual time=6088.250..6089.284 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=293401.48..297400.65 rows=319933 width=12) (actual time=6008.546..6082.354 rows=9789 loops=1)
Q3,27.5,->  HashAggregate  (cost=2568357.64..2599708.26 rows=3135062 width=20) (actual time=28072.550..28114.876 rows=113633 loops=1)
Q15,26.5,->  HashAggregate  (cost=1171157.81..1171195.49 rows=3768 width=12) (actual time=3726.057..3746.811 rows=100000 loops=1)
Q3,10.4,->  Hash Join  (cost=550391.58..2521331.71 rows=3135062 width=20) (actual time=5681.341..27837.211 rows=299226 loops=1)
Q4,10.1,->  Hash  (cost=988990.39..988990.39 rows=1360618 width=4) (actual time=36347.172..36347.172 rows=13767196 loops=1)
Q4,10.1,->  HashAggregate  (cost=975384.20..988990.39 rows=1360618 width=4) (actual time=29562.139..33798.637 rows=13767196 loops=1)
Q21,5.9,->  Merge Anti Join  (cost=1593885.16..2600380.63 rows=390198 width=38) (actual time=28784.650..47086.072 rows=66026 loops=1)
Q5,5.0,Sort  (cost=2348361.65..2348361.71 rows=25 width=34) (actual time=29751.803..29751.804 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2348360.82..2348361.07 rows=25 width=34) (actual time=29751.722..29751.725 rows=5 loops=1)
Q4,5.0,Sort  (cost=1283811.82..1283811.83 rows=1 width=16) (actual time=38926.435..38926.436 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1283811.80..1283811.81 rows=1 width=16) (actual time=38926.297..38926.299 rows=5 loops=1)
Q13,4.4,Sort  (cost=845653.62..845654.12 rows=200 width=8) (actual time=37277.141..37277.144 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=845643.98..845645.98 rows=200 width=8) (actual time=37276.972..37276.985 rows=45 loops=1)
Q17,3.7,->  Hash Join  (cost=6576.36..9560283.53 rows=19765 width=4) (actual time=24.077..21347.009 rows=5212 loops=1)
Q4,3.3,->  Hash Join  (cost=1018199.45..1283029.81 rows=156399 width=16) (actual time=36540.147..38762.779 rows=526653 loops=1)
Q22,2.3,Sort  (cost=691295.27..691295.28 rows=3 width=20) (actual time=7501.927..7501.927 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638315.09..638315.14 rows=3 width=20) (actual time=7501.819..7501.821 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=16.33..3920.34 rows=1 width=4) (actual time=11.249..28.825 rows=2 loops=6457)
Q20,2.0,->  Merge Join  (cost=10096.82..1035580647.11 rows=28982 width=4) (actual time=51.210..288568.042 rows=58813 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..1035476162.14 rows=2666667 width=8) (actual time=0.513..286636.797 rows=5439524 loops=1)
Q16,2.0,->  Sort  (cost=406670.26..408147.88 rows=591049 width=40) (actual time=8124.512..8293.353 rows=1189567 loops=1)
Q16,2.0,->  Hash Join  (cost=58141.10..350009.59 rows=591049 width=40) (actual time=667.924..5720.320 rows=1189567 loops=1)
Q12,2.0,Sort  (cost=980885.02..980885.02 rows=1 width=27) (actual time=19247.729..19247.730 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=980885.00..980885.01 rows=1 width=27) (actual time=19247.606..19247.607 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.791..3349.124 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=350195.56..1114766.10 rows=562123 width=175) (actual time=3623.235..17153.460 rows=1121464 loops=1)
Q10,1.9,->  Hash Join  (cost=350193.99..1107035.35 rows=562123 width=153) (actual time=3623.201..16818.001 rows=1121464 loops=1)
Q10,1.9,->  Hash Join  (cost=281165.99..1029575.50 rows=562123 width=12) (actual time=2315.776..14892.550 rows=1121464 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.56..925346.12 rows=20015232 width=4) (actual time=0.140..15764.883 rows=37967116 loops=1)
Q21,1.8,->  Sort  (cost=1593884.59..1594860.09 rows=390198 width=38) (actual time=28784.566..28880.425 rows=731722 loops=1)
Q21,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem l3  (cost=0.56..925346.12 rows=20015232 width=8) (actual time=0.032..14440.386 rows=37984919 loops=1)
Q21,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem l1  (cost=0.56..925346.12 rows=20015232 width=8) (actual time=0.083..16194.668 rows=37967116 loops=1)
Q21,1.8,->  Hash Join  (cost=536329.60..1557647.20 rows=390198 width=38) (actual time=5861.598..28495.119 rows=731722 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.89..1012054.66 rows=800609 width=34) (actual time=30.962..21919.742 rows=1515797 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.678 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=3358935.34..3358939.08 rows=107 width=46) (actual time=46224.860..48515.267 rows=175 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.012..19.252 rows=61971 loops=1)
Q20,1.5,Sort  (cost=1035585123.79..1035585126.69 rows=1159 width=51) (actual time=288717.598..288717.710 rows=1789 loops=1)
Q20,1.5,->  Hash Join  (cost=1035584364.89..1035585064.80 rows=1159 width=51) (actual time=288698.362..288715.490 rows=1789 loops=1)
Q20,1.5,->  HashAggregate  (cost=1035580719.57..1035581009.39 rows=28982 width=4) (actual time=288656.717..288668.497 rows=44493 loops=1)
Q1,1.5,Sort  (cost=4172629.48..4172629.49 rows=6 width=20) (actual time=78129.484..78129.486 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4172629.29..4172629.40 rows=6 width=20) (actual time=78129.360..78129.363 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1128819.18..1134440.41 rows=562123 width=175) (actual time=18733.662..18909.351 rows=374978 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.18 rows=140520 width=0) (actual time=384.010..384.010 rows=190708 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.31..41909.96 rows=140520 width=24) (actual time=391.285..556.845 rows=190708 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=90089 width=4) (actual time=0.045..474.168 rows=108908 loops=1)
Q9,1.2,->  Hash Join  (cost=71077.11..2027417.74 rows=2704728 width=36) (actual time=551.660..23210.713 rows=3271001 loops=1)
Q9,1.2,->  Hash Join  (cost=66648.11..1985798.73 rows=2704728 width=28) (actual time=501.585..21425.740 rows=3271001 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=90089 width=4) (actual time=500.875..500.875 rows=108908 loops=1)
Q9,1.2,->  Hash  (cost=2027417.74..2027417.74 rows=2704728 width=36) (actual time=24612.865..24612.865 rows=3271001 loops=1)
Q19,1.1,->  Seq Scan on lineitem  (cost=0.00..2867845.91 rows=1129095 width=16) (actual time=0.140..20730.673 rows=1243516 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.002..3627.196 rows=15015000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=24) (actual time=0.009..10120.578 rows=60045669 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=20) (actual time=0.010..10751.874 rows=60045669 loops=1)
Q8,1.0,->  Hash Join  (cost=551032.98..2449573.93 rows=23909 width=38) (actual time=5196.961..24179.018 rows=24434 loops=1)
Q8,1.0,->  Hash Join  (cost=551031.42..2449124.08 rows=23909 width=16) (actual time=5196.889..24151.176 rows=24434 loops=1)
Q8,1.0,->  Hash Join  (cost=546602.42..2444366.33 rows=23909 width=16) (actual time=5126.984..24060.034 rows=24434 loops=1)
Q8,1.0,->  Hash Join  (cost=28036.11..1924082.35 rows=394290 width=16) (actual time=120.816..18905.975 rows=401399 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.132..644.375 rows=300963 loops=1)
Q8,1.0,->  Hash Join  (cost=159201.74..507185.38 rows=910474 width=8) (actual time=1693.246..4759.531 rows=913948 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=722.566..722.566 rows=300963 loops=1)
Q8,1.0,->  Hash  (cost=507185.38..507185.38 rows=910474 width=8) (actual time=5001.130..5001.130 rows=913948 loops=1)
Q8,1.0,->  Hash  (cost=27871.95..27871.95 rows=13133 width=4) (actual time=120.652..120.652 rows=13376 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.93 rows=13133 width=0) (actual time=3.912..3.912 rows=13376 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95408.11 rows=4552368 width=0) (actual time=898.884..898.884 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.21..27871.95 rows=13133 width=4) (actual time=5.963..115.790 rows=13376 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96546.21..418353.73 rows=4552368 width=12) (actual time=968.359..2809.632 rows=4561961 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.036..2937.134 rows=15015000 loops=1)
Q7,1.0,->  Hash Join  (cost=936471.38..2367941.36 rows=60775 width=64) (actual time=13159.953..28562.680 rows=58621 loops=1)
Q7,1.0,->  Hash Join  (cost=932735.98..2356089.10 rows=1460371 width=42) (actual time=13126.069..28086.823 rows=1462955 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=675.974..7049.890 rows=1203239 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.078..638.597 rows=120284 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.042..32.023 rows=8003 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=675.429..675.429 rows=120284 loops=1)
Q7,1.0,->  Hash  (cost=530594.42..530594.42 rows=1201199 width=30) (actual time=7453.195..7453.195 rows=1203239 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=33.728..33.728 rows=8003 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..382562.91 rows=18254635 width=0) (actual time=5289.573..5289.573 rows=18248249 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387126.57..1727421.10 rows=18254635 width=20) (actual time=5666.207..17137.952 rows=18248249 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191984.79 rows=9160823 width=0) (actual time=2682.874..2682.874 rows=9115786 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192085.79..1464679.31 rows=403996 width=8) (actual time=3037.636..9304.091 rows=398696 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=16) (actual time=0.005..10187.477 rows=60045669 loops=1)
Q5,1.0,->  Hash Join  (cost=422721.62..2347627.79 rows=73303 width=34) (actual time=4837.838..29694.183 rows=72787 loops=1)
Q5,1.0,->  Hash Join  (cost=418042.62..2328471.56 rows=1832560 width=46) (actual time=4782.711..28718.577 rows=1818596 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.125..703.459 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=111249.21..412314.50 rows=458249 width=38) (actual time=1356.362..4603.373 rows=454991 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=804.154..804.154 rows=299838 loops=1)
Q5,1.0,->  Hash  (cost=412314.50..412314.50 rows=458249 width=38) (actual time=4780.297..4780.297 rows=454991 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..48020.86 rows=2291243 width=0) (actual time=479.297..479.297 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48593.68..336484.32 rows=2291243 width=8) (actual time=549.226..3011.039 rows=2277830 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12057.51 rows=575308 width=0) (actual time=126.017..126.017 rows=573915 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12201.34..274352.96 rows=575308 width=20) (actual time=186.560..2028.266 rows=573915 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=7221869 width=16) (actual time=0.010..3035.554 rows=7215287 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1817046.21 rows=32678213 width=12) (actual time=0.025..14972.609 rows=32691598 loops=1)
Q3,1.0,->  Hash Join  (cost=49689.06..532385.35 rows=1440498 width=12) (actual time=306.147..5222.243 rows=1443627 loops=1)
Q3,1.0,->  Hash  (cost=532385.35..532385.35 rows=1440498 width=12) (actual time=5668.704..5668.704 rows=1443627 loops=1)
Q3,1.0,->  Hash  (cost=45949.13..45949.13 rows=299195 width=4) (actual time=302.547..302.547 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.39 rows=299195 width=0) (actual time=50.417..50.417 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.19..45949.13 rows=299195 width=4) (actual time=58.926..226.416 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.015..3023.740 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=6770.178..6770.178 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594302.45..637871.43 rows=59155 width=20) (actual time=7227.340..7483.713 rows=63414 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.90 rows=383317 width=0) (actual time=66.696..66.696 rows=381643 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6681.73..52021.80 rows=383317 width=4) (actual time=75.097..268.150 rows=381643 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=7317953 width=4) (actual time=0.016..4043.087 rows=7316588 loops=1)
Q21,1.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l2  (cost=0.56..2626280.02 rows=60045697 width=8) (actual time=0.072..11421.969 rows=60042629 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.034..29.773 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=441209.30..441209.30 rows=7317953 width=4) (actual time=5807.471..5807.471 rows=7316588 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=30.781..30.781 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=465801.25..469800.41 rows=1599664 width=168) (actual time=5314.626..5433.330 rows=1586817 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7974 width=30) (actual time=0.234..929.066 rows=8075 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300961.17 rows=1599664 width=168) (actual time=55.397..4315.071 rows=1586960 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.004..27.001 rows=19837 loops=6457)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.092..44.591 rows=19837 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=55.132..55.132 rows=19837 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.43..97473.43 rows=22022 width=4) (actual time=0.094..988.725 rows=21593 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.072..39.937 rows=4023 loops=1)
Q20,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=55) (actual time=41.589..41.589 rows=4023 loops=1)
Q19,1.0,->  Hash Join  (cost=39695.05..2911923.57 rows=1131 width=8) (actual time=246.946..21175.072 rows=1129 loops=1)
Q19,1.0,->  Hash  (cost=39635.27..39635.27 rows=4782 width=30) (actual time=242.256..242.256 rows=4760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8339.10 rows=397467 width=0) (actual time=60.704..60.704 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4165.36 rows=198493 width=0) (actual time=35.699..35.699 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12498.30 rows=595787 width=0) (actual time=88.135..88.135 rows=598661 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.47 rows=8076 width=0) (actual time=2.830..2.830 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8003 width=0) (actual time=2.912..2.912 rows=7986 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.27 rows=7956 width=0) (actual time=3.399..3.399 rows=7865 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=25880.67..39635.27 rows=4782 width=30) (actual time=200.769..240.495 rows=4760 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.007..3768.175 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666931.97 rows=60045697 width=8) (actual time=0.014..11596.674 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=8) (actual time=0.013..10783.473 rows=60045669 loops=1)
Q18,1.0,Limit  (cost=10153747.81..10153750.56 rows=100 width=39) (actual time=62493.428..62493.715 rows=99 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=12) (actual time=0.007..9719.471 rows=60045669 loops=1)
Q17,1.0,->  Hash  (cost=6551.67..6551.67 rows=1975 width=4) (actual time=21.178..21.178 rows=1987 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.18 rows=1975 width=0) (actual time=0.777..0.777 rows=1987 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.67..6551.67 rows=1975 width=4) (actual time=1.103..20.365 rows=1987 loops=1)
Q16,1.0,Sort  (cost=416412.99..416483.16 rows=28070 width=40) (actual time=8867.158..8868.883 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54382.32..54382.32 rows=299404 width=40) (actual time=663.017..663.017 rows=297559 loops=1)
Q16,1.0,->  GroupAggregate  (cost=406670.26..414339.07 rows=28070 width=40) (actual time=8124.665..8818.915 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5713.15 rows=322893 width=0) (actual time=49.642..49.642 rows=320925 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5788.00..54382.32 rows=299404 width=40) (actual time=57.793..553.385 rows=297559 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47479.39 rows=2265482 width=0) (actual time=626.021..626.021 rows=2243414 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47479.39 rows=2265482 width=0) (actual time=556.089..556.089 rows=2243414 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=48045.76..1148502.99 rows=2265482 width=12) (actual time=773.886..2534.009 rows=2243414 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48045.76..1148502.99 rows=2265482 width=12) (actual time=842.692..6527.614 rows=2243414 loops=1)
Q14,1.0,->  Hash Join  (cost=100485.21..1120855.91 rows=705429 width=29) (actual time=1548.395..5701.775 rows=699561 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..14786.86 rows=705429 width=0) (actual time=172.580..172.580 rows=699561 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=14963.21..1024752.47 rows=705429 width=12) (actual time=292.497..3874.799 rows=699561 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14895334 width=8) (actual time=0.036..7496.761 rows=14852865 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733667.31 rows=14895334 width=8) (actual time=919.615..20837.497 rows=15352885 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.013..4404.261 rows=15015000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.43..375486.39 rows=287989 width=15) (actual time=0.082..10120.049 rows=311059 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.57..975845.19 rows=287989 width=27) (actual time=8617.217..18985.224 rows=311059 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=8563.976..8563.976 rows=15015000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..287802.66 rows=319933 width=8) (actual time=26.125..2395.399 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..287802.66 rows=319933 width=12) (actual time=42.635..3347.310 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.066..25.189 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.065..41.398 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=42.560..42.560 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=26.017..26.017 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817046.21 rows=58889577 width=20) (actual time=0.016..16881.100 rows=58876178 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.43..687016.02 rows=14872719 width=12) (actual time=0.060..9661.648 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=274071.81..274071.81 rows=567500 width=8) (actual time=2312.280..2312.280 rows=560968 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11895.43 rows=567500 width=0) (actual time=117.512..117.512 rows=560968 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12037.31..274071.81 rows=567500 width=8) (actual time=176.820..2130.618 rows=560968 loops=1)
Q19,,->  BitmapOr  (cost=25880.67..25880.67 rows=4786 width=0) (actual time=199.794..199.794 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8631.49..8631.49 rows=1590 width=0) (actual time=65.388..65.388 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4457.27..4457.27 rows=790 width=0) (actual time=40.871..40.871 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=12791.41..12791.41 rows=2406 width=0) (actual time=92.820..92.820 rows=0 loops=1)
