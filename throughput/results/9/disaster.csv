Q18,402140.9,->  GroupAggregate  (cost=10335713.21..11176187.70 rows=30562709 width=39) (actual time=80012.721..80012.980 rows=76 loops=1)
Q3,319548.0,->  Sort  (cost=2708850.82..2716839.52 rows=3195480 width=20) (actual time=30013.666..30013.667 rows=10 loops=1)
Q18,100558.7,->  Hash Join  (cost=2214426.09..2838129.46 rows=7642467 width=39) (actual time=48545.623..59146.340 rows=76 loops=1)
Q18,100558.7,->  Hash Join  (cost=2145398.09..2654464.45 rows=7642467 width=20) (actual time=47350.838..57949.644 rows=76 loops=1)
Q18,100558.7,->  Hash  (cost=2838129.46..2838129.46 rows=7642467 width=39) (actual time=59146.669..59146.669 rows=76 loops=1)
Q18,57448.7,->  Sort  (cost=10335713.21..10412119.98 rows=30562709 width=39) (actual time=80012.705..80012.745 rows=532 loops=1)
Q18,57448.7,->  Hash Join  (cost=2933660.29..5700261.29 rows=30562709 width=39) (actual time=59303.262..80011.359 rows=532 loops=1)
Q18,53708.5,->  Hash  (cost=2094374.94..2094374.94 rows=4081852 width=4) (actual time=47227.255..47227.255 rows=76 loops=1)
Q18,53708.5,->  HashAggregate  (cost=2002533.27..2053556.42 rows=4081852 width=8) (actual time=39889.596..47226.822 rows=76 loops=1)
Q21,39419.0,->  Merge Semi Join  (cost=1619783.29..5494981.00 rows=1 width=26) (actual time=29907.175..70244.603 rows=39419 loops=1)
Q2,4652.0,->  Merge Join  (cost=465801.75..25305979.06 rows=1 width=190) (actual time=6456.078..248052.522 rows=4652 loops=1)
Q21,4021.0,->  HashAggregate  (cost=5494981.00..5494981.01 rows=1 width=26) (actual time=70300.142..70301.206 rows=4021 loops=1)
Q8,365.0,Sort  (cost=2450111.65..2450113.48 rows=730 width=38) (actual time=30877.408..30877.409 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=2450064.16..2450076.93 rows=730 width=38) (actual time=30877.339..30877.341 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=5494981.02..5494981.03 rows=1 width=26) (actual time=70302.201..70302.206 rows=100 loops=1)
Q21,100.0,Limit  (cost=5494981.02..5494981.03 rows=1 width=26) (actual time=70302.203..70302.220 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25305979.07..25305979.08 rows=1 width=190) (actual time=248082.222..248082.245 rows=100 loops=1)
Q2,100.0,Limit  (cost=25305979.07..25305979.08 rows=1 width=190) (actual time=248082.224..248082.261 rows=100 loops=1)
Q11,31.5,Sort  (cost=616856.54..617656.37 rows=319933 width=12) (actual time=9766.257..9767.507 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=293401.48..297400.65 rows=319933 width=12) (actual time=9687.565..9760.359 rows=10130 loops=1)
Q3,28.2,->  HashAggregate  (cost=2607842.85..2639797.65 rows=3195480 width=20) (actual time=29949.028..29993.293 rows=113015 loops=1)
Q3,10.7,->  Hash Join  (cost=559731.43..2559910.65 rows=3195480 width=20) (actual time=7928.191..29720.063 rows=298174 loops=1)
Q21,5.9,->  Merge Anti Join  (cost=1619770.57..2643242.22 rows=396592 width=38) (actual time=29905.875..50228.229 rows=66318 loops=1)
Q13,4.5,Sort  (cost=844291.00..844291.50 rows=200 width=8) (actual time=25336.627..25336.632 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=844281.36..844283.36 rows=200 width=8) (actual time=25336.501..25336.509 rows=44 loops=1)
Q17,3.8,->  Hash Join  (cost=6644.55..9794004.20 rows=20295 width=4) (actual time=38.521..23811.400 rows=5311 loops=1)
Q2,2.0,->  Hash Join  (cost=16.33..3920.34 rows=1 width=4) (actual time=14.874..38.583 rows=2 loops=6215)
Q20,2.0,->  Merge Join  (cost=10096.82..1035580647.11 rows=28982 width=4) (actual time=10.303..345062.568 rows=59193 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..1035476162.14 rows=2666667 width=8) (actual time=0.214..342654.849 rows=5433070 loops=1)
Q21,1.8,->  Sort  (cost=1619770.01..1620761.49 rows=396592 width=38) (actual time=29905.649..30014.217 rows=736392 loops=1)
Q21,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem l3  (cost=0.56..940506.84 rows=20343216 width=8) (actual time=0.073..16119.678 rows=37945707 loops=1)
Q21,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem l1  (cost=0.56..940506.84 rows=20343216 width=8) (actual time=0.048..15333.791 rows=37927710 loops=1)
Q21,1.8,->  Hash Join  (cost=544841.30..1582892.31 rows=396592 width=38) (actual time=7058.384..29618.435 rows=736392 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.89..1028576.52 rows=813729 width=34) (actual time=30.517..21787.307 rows=1525282 loops=1)
Q20,1.5,Sort  (cost=1035585123.79..1035585126.69 rows=1159 width=51) (actual time=345306.811..345306.927 rows=1754 loops=1)
Q20,1.5,->  Hash Join  (cost=1035584364.89..1035585064.80 rows=1159 width=51) (actual time=345286.269..345304.692 rows=1754 loops=1)
Q20,1.5,->  HashAggregate  (cost=1035580719.57..1035581009.39 rows=28982 width=4) (actual time=345249.298..345261.181 rows=44713 loops=1)
Q18,1.3,Limit  (cost=10335713.21..10335715.96 rows=100 width=39) (actual time=80012.725..80012.994 rows=76 loops=1)
Q19,1.2,->  Seq Scan on lineitem  (cost=0.00..2925153.07 rows=1150536 width=16) (actual time=0.066..22912.133 rows=900492 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1666931.97 rows=60045697 width=20) (actual time=0.027..11285.987 rows=59985329 loops=1)
Q8,1.0,->  Hash Join  (cost=551041.32..2449585.72 rows=23922 width=38) (actual time=8632.174..30834.445 rows=23902 loops=1)
Q8,1.0,->  Hash Join  (cost=551039.76..2449135.62 rows=23922 width=16) (actual time=8632.104..30791.332 rows=23902 loops=1)
Q8,1.0,->  Hash Join  (cost=546610.76..2444377.69 rows=23922 width=16) (actual time=8572.889..30690.373 rows=23902 loops=1)
Q8,1.0,->  Hash Join  (cost=28044.46..1924092.79 rows=394500 width=16) (actual time=178.384..22017.155 rows=397976 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.092..592.376 rows=300963 loops=1)
Q8,1.0,->  Hash Join  (cost=159201.74..507185.38 rows=910474 width=8) (actual time=3385.983..8063.721 rows=913072 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=675.256..675.256 rows=300963 loops=1)
Q8,1.0,->  Hash  (cost=507185.38..507185.38 rows=910474 width=8) (actual time=8387.715..8387.715 rows=913072 loops=1)
Q8,1.0,->  Hash  (cost=27880.21..27880.21 rows=13140 width=4) (actual time=178.098..178.098 rows=13268 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.98 rows=13140 width=0) (actual time=6.711..6.711 rows=13268 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95408.11 rows=4552368 width=0) (actual time=2576.281..2576.281 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.26..27880.21 rows=13140 width=4) (actual time=9.120..172.904 rows=13268 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96546.21..418353.73 rows=4552368 width=12) (actual time=2707.240..4688.299 rows=4557440 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191834.61 rows=9229404 width=0) (actual time=3458.112..3458.112 rows=9257919 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192034.78..1483211.37 rows=800699 width=8) (actual time=3874.381..10686.966 rows=796557 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..448259.34 rows=7488995 width=16) (actual time=0.017..4538.343 rows=7365497 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1846078.74 rows=32572181 width=12) (actual time=0.014..16792.713 rows=32090989 loops=1)
Q3,1.0,->  Hash Join  (cost=49715.40..541024.23 rows=1496576 width=12) (actual time=488.881..7435.590 rows=1469173 loops=1)
Q3,1.0,->  Hash  (cost=541024.23..541024.23 rows=1496576 width=12) (actual time=7921.165..7921.165 rows=1469173 loops=1)
Q3,1.0,->  Hash  (cost=45968.47..45968.47 rows=299755 width=4) (actual time=486.694..486.694 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6868.59 rows=299755 width=0) (actual time=60.563..60.563 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6943.53..45968.47 rows=299755 width=4) (actual time=68.852..405.529 rows=299751 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..448259.34 rows=7434886 width=4) (actual time=0.023..5015.025 rows=7309402 loops=1)
Q21,1.0,->  Index Scan using lineitem_l_orderkey_idx on lineitem l2  (cost=0.56..2678355.27 rows=61029647 width=8) (actual time=0.050..14292.484 rows=59985280 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.043..29.377 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=448259.34..448259.34 rows=7434886 width=4) (actual time=7002.264..7002.264 rows=7309402 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=30.398..30.398 rows=4021 loops=1)
Q2,1.0,->  Sort  (cost=465801.25..469800.41 rows=1599664 width=168) (actual time=6374.802..6521.804 rows=1603224 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7990 width=30) (actual time=0.016..1257.911 rows=7914 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300961.17 rows=1599664 width=168) (actual time=45.665..5232.311 rows=1603360 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.007..36.574 rows=20042 loops=6215)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.050..35.203 rows=20042 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=45.503..45.503 rows=20042 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.43..97473.43 rows=22022 width=4) (actual time=0.061..1322.009 rows=21740 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.037..35.465 rows=3988 loops=1)
Q20,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=55) (actual time=36.882..36.882 rows=3988 loops=1)
Q19,1.0,->  Hash Join  (cost=37496.12..2967114.35 rows=1148 width=8) (actual time=320.495..23403.668 rows=1132 loops=1)
Q19,1.0,->  Hash  (cost=37436.60..37436.60 rows=4762 width=30) (actual time=271.568..271.568 rows=4807 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8339.10 rows=397467 width=0) (actual time=61.745..61.745 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4165.36 rows=198493 width=0) (actual time=37.496..37.496 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.63 rows=8091 width=0) (actual time=3.283..3.283 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.79 rows=8006 width=0) (actual time=3.139..3.139 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.31 rows=7961 width=0) (actual time=2.885..2.885 rows=7876 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13380.90..37436.60 rows=4762 width=30) (actual time=114.297..269.532 rows=4807 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..410929.34 rows=15284934 width=16) (actual time=0.009..5003.277 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1696906.18 rows=61125418 width=8) (actual time=0.012..10221.629 rows=60045706 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1696906.18 rows=61125418 width=8) (actual time=0.016..10307.410 rows=60045706 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1691895.11 rows=60944911 width=12) (actual time=0.010..10421.476 rows=60044616 loops=1)
Q17,1.0,->  Hash  (cost=6619.58..6619.58 rows=1998 width=4) (actual time=32.361..32.361 rows=2016 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.41 rows=1998 width=0) (actual time=0.846..0.846 rows=2016 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.91..6619.58 rows=1998 width=4) (actual time=1.155..31.599 rows=2016 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14805188 width=8) (actual time=0.028..6736.497 rows=14852274 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732755.42 rows=14805188 width=8) (actual time=976.541..16303.820 rows=15352292 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..287802.66 rows=319933 width=8) (actual time=34.024..4708.057 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..287802.66 rows=319933 width=12) (actual time=32.401..4692.752 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.133..33.090 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.035..31.541 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=33.932..33.932 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=32.344..32.344 rows=3934 loops=1)
Q19,,->  BitmapOr  (cost=13380.90..13380.90 rows=10355 width=0) (actual time=112.487..112.487 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8631.52..8631.52 rows=1591 width=0) (actual time=66.715..66.715 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4458.62..4458.62 rows=803 width=0) (actual time=42.592..42.592 rows=0 loops=1)
