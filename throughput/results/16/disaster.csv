Q3,316193.3,->  Sort  (cost=2673343.52..2681248.35 rows=3161933 width=20) (actual time=28940.036..28940.037 rows=10 loops=1)
Q2,4764.0,->  Merge Join  (cost=465801.75..25666653.28 rows=1 width=190) (actual time=6066.714..258290.151 rows=4764 loops=1)
Q2,100.0,->  Sort  (cost=25666653.29..25666653.29 rows=1 width=190) (actual time=258315.791..258315.803 rows=100 loops=1)
Q2,100.0,Limit  (cost=25666653.29..25666653.29 rows=1 width=190) (actual time=258315.793..258315.819 rows=100 loops=1)
Q3,27.8,->  HashAggregate  (cost=2573395.96..2605015.29 rows=3161933 width=20) (actual time=28875.165..28919.493 rows=113450 loops=1)
Q3,10.5,->  Hash Join  (cost=552502.57..2525966.96 rows=3161933 width=20) (actual time=7095.883..28648.522 rows=300197 loops=1)
Q4,10.1,->  Hash  (cost=1007500.79..1007500.79 rows=1360618 width=4) (actual time=38934.651..38934.651 rows=13767075 loops=1)
Q4,10.1,->  HashAggregate  (cost=993894.60..1007500.79 rows=1360618 width=4) (actual time=31333.836..36204.219 rows=13767075 loops=1)
Q5,5.0,Sort  (cost=2354591.26..2354591.33 rows=25 width=34) (actual time=27767.971..27767.971 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2354590.43..2354590.68 rows=25 width=34) (actual time=27767.896..27767.899 rows=5 loops=1)
Q4,5.0,Sort  (cost=1308100.41..1308100.42 rows=1 width=16) (actual time=42945.677..42945.677 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1308100.39..1308100.40 rows=1 width=16) (actual time=42945.581..42945.581 rows=5 loops=1)
Q17,3.7,->  Hash Join  (cost=6586.51..9667431.22 rows=19993 width=4) (actual time=32.832..24718.803 rows=5327 loops=1)
Q4,3.2,->  Hash Join  (cost=1037357.43..1307311.16 rows=157847 width=16) (actual time=39227.026..42772.850 rows=520031 loops=1)
Q22,2.3,Sort  (cost=696991.46..696991.46 rows=3 width=20) (actual time=11545.062..11545.063 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=644126.72..644126.76 rows=3 width=20) (actual time=11544.992..11544.994 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=16.33..3920.34 rows=1 width=4) (actual time=14.817..38.416 rows=2 loops=6515)
Q20,2.0,->  Merge Join  (cost=10096.82..1035580647.11 rows=28982 width=4) (actual time=3.476..349337.366 rows=59111 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..1035476162.14 rows=2666667 width=8) (actual time=0.284..346920.040 rows=5439647 loops=1)
Q16,2.0,->  Sort  (cost=406191.82..407660.84 rows=587608 width=40) (actual time=8556.311..8696.380 rows=1186042 loops=1)
Q16,2.0,->  Hash Join  (cost=58051.69..349885.77 rows=587608 width=40) (actual time=979.197..5938.853 rows=1186042 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.184..3523.446 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.56..942906.97 rows=20395052 width=4) (actual time=0.066..15882.607 rows=37965637 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.067..0.143 rows=56 loops=1)
Q20,1.5,Sort  (cost=1035585123.79..1035585126.69 rows=1159 width=51) (actual time=349554.156..349554.266 rows=1814 loops=1)
Q20,1.5,->  Hash Join  (cost=1035584364.89..1035585064.80 rows=1159 width=51) (actual time=349522.222..349552.051 rows=1814 loops=1)
Q20,1.5,->  HashAggregate  (cost=1035580719.57..1035581009.39 rows=28982 width=4) (actual time=349484.603..349507.034 rows=44781 loops=1)
Q1,1.5,Sort  (cost=4167142.84..4167142.85 rows=6 width=20) (actual time=85332.805..85332.806 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4167142.65..4167142.76 rows=6 width=20) (actual time=85332.736..85332.739 rows=4 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.01 rows=139602 width=0) (actual time=860.912..860.912 rows=190515 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.91..41848.47 rows=139602 width=24) (actual time=869.071..1480.503 rows=190515 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191912.77 rows=9171620 width=0) (actual time=3303.005..3303.005 rows=9135631 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=192112.73..1468140.18 rows=799857 width=8) (actual time=3712.062..12134.998 rows=793886 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1671919.59 rows=60225359 width=16) (actual time=0.007..11061.754 rows=60045303 loops=1)
Q5,1.0,->  Hash Join  (cost=423318.74..2353858.03 rows=73240 width=34) (actual time=5771.049..27700.514 rows=72960 loops=1)
Q5,1.0,->  Hash Join  (cost=418639.74..2334714.25 rows=1830984 width=46) (actual time=5716.502..27027.242 rows=1812763 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.092..804.992 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=111133.06..412916.55 rows=457855 width=38) (actual time=1730.238..5529.464 rows=453487 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=908.073..908.073 rows=299436 loops=1)
Q5,1.0,->  Hash  (cost=412916.55..412916.55 rows=457855 width=38) (actual time=5714.256..5714.256 rows=453487 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47905.21 rows=2289277 width=0) (actual time=733.660..733.660 rows=2285104 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48477.52..337097.68 rows=2289277 width=8) (actual time=819.919..3770.232 rows=2278172 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12701.00 rows=591657 width=0) (actual time=203.949..203.949 rows=578381 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12848.92..280057.77 rows=591657 width=20) (actual time=281.284..3416.374 rows=567467 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=7333549 width=16) (actual time=0.015..3708.683 rows=7315809 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1820680.39 rows=32310581 width=12) (actual time=0.010..16510.470 rows=32290128 loops=1)
Q3,1.0,->  Hash Join  (cost=49784.93..534098.72 rows=1472308 width=12) (actual time=579.088..6626.110 rows=1462794 loops=1)
Q3,1.0,->  Hash  (cost=534098.72..534098.72 rows=1472308 width=12) (actual time=7087.640..7087.640 rows=1462794 loops=1)
Q3,1.0,->  Hash  (cost=46020.61..46020.61 rows=301145 width=4) (actual time=576.184..576.184 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.01 rows=301145 width=0) (actual time=50.330..50.330 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.30..46020.61 rows=301145 width=4) (actual time=58.916..489.385 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=4) (actual time=0.014..5893.665 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=4) (actual time=9878.728..9878.728 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600171.13..643685.96 rows=58768 width=20) (actual time=10799.175..11522.160 rows=63315 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6543.11 rows=380812 width=0) (actual time=69.066..69.066 rows=381747 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6638.31..51912.63 rows=380812 width=4) (actual time=77.005..748.500 rows=381747 loops=1)
Q2,1.0,->  Sort  (cost=465801.25..469800.41 rows=1599664 width=168) (actual time=6028.327..6186.478 rows=1602714 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8107 width=30) (actual time=0.023..1297.373 rows=8046 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300961.17 rows=1599664 width=168) (actual time=51.880..4909.654 rows=1602960 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.007..36.380 rows=20037 loops=6515)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.050..41.047 rows=20037 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=51.704..51.704 rows=20037 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.43..97473.43 rows=22022 width=4) (actual time=0.033..1347.023 rows=21743 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.037..36.151 rows=3987 loops=1)
Q20,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=55) (actual time=37.567..37.567 rows=3987 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1683570.42 rows=60645042 width=12) (actual time=0.006..10999.101 rows=60044872 loops=1)
Q17,1.0,->  Hash  (cost=6561.78..6561.78 rows=1978 width=4) (actual time=32.113..32.113 rows=2022 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.21 rows=1978 width=0) (actual time=0.832..0.832 rows=2022 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.70..6561.78 rows=1978 width=4) (actual time=1.180..31.423 rows=2022 loops=1)
Q16,1.0,Sort  (cost=415876.60..415946.36 rows=27906 width=40) (actual time=9287.198..9290.521 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54314.70..54314.70 rows=297661 width=40) (actual time=976.868..976.868 rows=296675 loops=1)
Q16,1.0,->  GroupAggregate  (cost=406191.82..413815.98 rows=27906 width=40) (actual time=8556.402..9234.491 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5697.61 rows=320827 width=0) (actual time=58.774..58.774 rows=319925 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5772.02..54314.70 rows=297661 width=40) (actual time=67.785..861.545 rows=296675 loops=1)
Q14,1.0,->  Hash Join  (cost=101181.66..1145949.52 rows=742156 width=29) (actual time=1986.073..4150.221 rows=773744 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15474.13 rows=742156 width=0) (actual time=271.983..271.983 rows=781274 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=15659.66..1049295.18 rows=742156 width=12) (actual time=422.610..1977.408 rows=773744 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817046.21 rows=58752411 width=20) (actual time=0.017..20264.957 rows=58681514 loops=1)
