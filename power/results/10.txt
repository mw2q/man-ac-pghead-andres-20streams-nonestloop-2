BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1993-12-01'
	and o_orderdate < cast(date '1993-12-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1149398.30..1149398.35 rows=20 width=175) (actual time=19032.749..19032.759 rows=20 loops=1)
   Buffers: shared hit=551348 read=856120
   ->  Sort  (cost=1149398.30..1150803.61 rows=562123 width=175) (actual time=19032.730..19032.732 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::double precision - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         Buffers: shared hit=551348 read=856120
         ->  HashAggregate  (cost=1128819.18..1134440.41 rows=562123 width=175) (actual time=18733.662..18909.351 rows=374978 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               Buffers: shared hit=551345 read=856120
               ->  Hash Join  (cost=350195.56..1114766.10 rows=562123 width=175) (actual time=3623.235..17153.460 rows=1121464 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     Buffers: shared hit=551345 read=856120
                     ->  Hash Join  (cost=350193.99..1107035.35 rows=562123 width=153) (actual time=3623.201..16818.001 rows=1121464 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=551344 read=856120
                           ->  Hash Join  (cost=281165.99..1029575.50 rows=562123 width=12) (actual time=2315.776..14892.550 rows=1121464 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 Buffers: shared hit=551342 read=820844
                                 ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.43..687016.02 rows=14872719 width=12) (actual time=0.060..9661.648 rows=14822992 loops=1)
                                       Buffers: shared hit=551340 read=592408
                                 ->  Hash  (cost=274071.81..274071.81 rows=567500 width=8) (actual time=2312.280..2312.280 rows=560968 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30105kB
                                       Buffers: shared hit=2 read=228436
                                       ->  Bitmap Heap Scan on orders  (cost=12037.31..274071.81 rows=567500 width=8) (actual time=176.820..2130.618 rows=560968 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                             Heap Blocks: exact=226904
                                             Buffers: shared hit=2 read=228436
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11895.43 rows=567500 width=0) (actual time=117.512..117.512 rows=560968 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                                   Buffers: shared read=1534
                           ->  Hash  (cost=50278.00..50278.00 rows=1500000 width=145) (actual time=1300.148..1300.148 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 281501kB
                                 Buffers: shared hit=2 read=35276
                                 ->  Seq Scan on customer  (cost=0.00..50278.00 rows=1500000 width=145) (actual time=0.012..574.906 rows=1500000 loops=1)
                                       Buffers: shared hit=2 read=35276
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           Buffers: shared hit=1
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.014 rows=25 loops=1)
                                 Buffers: shared hit=1
 Planning time: 4.430 ms
 Execution time: 19042.874 ms
(42 rows)

COMMIT;
COMMIT
